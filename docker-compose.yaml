services:
  remix:
    build:
      context: ./cs472
      dockerfile: Dockerfile
    volumes:
      - type: bind
        source: ./cs472
        target: /app
        consistency: delegated
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    networks:
      - app-network
    develop:
      watch:
        - action: sync+restart
          path: ./cs472/*
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: ./cs472/package.json
    command: sh -c "bun install && exec bun run dev --host"
  elysia:
    build:
      context: ./cs472-back
      dockerfile: Dockerfile
    volumes:
      - type: bind
        source: ./cs472-back
        target: /app
        consistency: delegated
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    networks:
      - app-network
    develop:
      watch:
        - action: sync+restart
          path: ./cs472-back/*
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: ./cs472-back/package.json
    command: sh -c "bun install && bunx prisma generate && exec bun run dev --host"
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=4632227074
    command: ["redis-server", "--requirepass", "4632227074"]
    volumes:
      - redis_data:/data
    restart: always
    networks:
      - app-network

  redisinsight:
    image: redislabs/redisinsight:latest
    container_name: redisinsight
    ports:
      - "5540:5540"
    environment:
      - RI_ENCRYPTION_KEY=7Pca9Tcp9IDqJiy6l137HsLW4DDz7Y37tLIhndUzBzw=
    volumes:
      - redisinsight:/data
    restart: always
    networks:
      - app-network

volumes:
  redis_data:
  redisinsight:
networks:
  app-network:
    driver: bridge